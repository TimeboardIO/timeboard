AWSTemplateFormatVersion: 2010-09-09
Parameters:
  SSHKey:
    Type: 'AWS::EC2::KeyPair::KeyName'
  DBUser:
    Type: 'String'
  DBPassword:
    Type: 'String'
  Route53HostedZone:
    Type: 'String'
  TimeboardDNSName:
    Type: 'String'
Resources:
  InternetGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: TimeboardVPC
  InternetRoute:
      Type: AWS::EC2::Route
      DependsOn: InternetGW
      Properties:
        RouteTableId:
          Ref: RouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId:
          Ref: InternetGW
  GWAttachment:
      Type: 'AWS::EC2::VPCGatewayAttachment'
      Properties:
        VpcId: !Ref TimeboardVPC
        InternetGatewayId: !Ref InternetGW
  TimeboardVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: TimeboardVPC
      CidrBlock: 10.0.10.0/24
      AvailabilityZone: 'eu-west-1a'
  DBSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: TimeboardVPC
      CidrBlock: 10.0.20.0/24
      AvailabilityZone: 'eu-west-1a'
  DBSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: TimeboardVPC
      CidrBlock: 10.0.30.0/24
      AvailabilityZone: 'eu-west-1b'
  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet
      RouteTableId:
        Ref: RouteTable
  RootRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - 'sts:AssumeRole'
      Path: '/'
      Policies:
        - PolicyName: 'root'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: '*'
                Resource: '*'
  EC2WebAppInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: 'EC2WebAppInstanceProfile'
      Path: '/'
      Roles:
        - Ref: RootRole
  EC2WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      VpcId:
        Ref: TimeboardVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ZC2 to connect RDS
      VpcId:
        Ref: TimeboardVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EC2WebAppSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
  MySQLDatabase:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: '30'
      StorageType: 'gp2'
      PubliclyAccessible: 'false'
      DBInstanceClass: 'db.t2.micro'
      DBName: 'Timeboard'
      Engine: MySQL
      BackupRetentionPeriod: 0
      EngineVersion: '8.0.16'
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      DBSubnetGroupName:
        Ref: DBSubnetGroup
      MasterUserPassword:
        Ref: DBPassword
      MasterUsername:
        Ref: DBUser

  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: 'Timeboard DBSubnet'
      SubnetIds:
        - Ref: DBSubnetA
        - Ref: DBSubnetB
  DBDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref 'Route53HostedZone'
      Comment: DNS name for timeboard
      Name: 'db.pierremellet.net'
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt MySQLDatabase.Endpoint.Address
  WebAppBT:
    Type: AWS::ElasticBeanstalk::Application
    Properties: 
      ApplicationName: 'TimeboardWebapp'
      Description: 'AWS Elastic Beanstalk Timeboard Application'
  WebAppEnvBT:
    Type: AWS::ElasticBeanstalk::Environment
    Properties: 
      ApplicationName: 
        Ref: WebAppBT
      Description: 'AWS Elastic Beanstalk Environment running Timeboard Application on Java 11'
      EnvironmentName: TimeboardEnvironment
      SolutionStackName: '64bit Amazon Linux 2018.03 v2.10.1 running Java 8'
      OptionSettings:
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: 'SERVER_PORT'
          Value: '5000'
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: 'SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_COGNITO_CLIENT-ID'
          Value: 'Change Me'
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: 'SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_COGNITO_CLIENT-SECRET'
          Value: 'Change Me'   
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: 'APP_URL'
          Value: !Ref 'TimeboardDNSName'
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: 'SPRING_DATASOURCE_URL'
          Value: 'jdbc:mysql://db.pierremellet.net:3306/timeboard?createDatabaseIfNotExist=true'
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: 'SPRING_DATASOURCE_USERNAME'
          Value: !Ref 'DBUser'
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: 'SPRING_DATASOURCE_PASSWORD'
          Value: !Ref 'DBPassword'
  WebAppDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref 'Route53HostedZone'
      Comment: DNS name for timeboard web app
      Name: !Ref 'TimeboardDNSName'
      Type: CNAME
      TTL: '900'
      ResourceRecords:
        - !GetAtt WebAppEnvBT.EndpointURL

Outputs:
  MySQLDNS:
    Description: Databse DNS Name
    Value: !GetAtt MySQLDatabase.Endpoint.Address
  MySQLPort:
    Description: Databse Prot
    Value: !GetAtt MySQLDatabase.Endpoint.Port
